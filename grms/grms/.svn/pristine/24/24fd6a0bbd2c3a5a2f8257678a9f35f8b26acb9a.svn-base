package com.hori.grms.service.impl;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hori.grms.dao.BackMoneyPlanMapper;
import com.hori.grms.dao.BackMoneyPlanPeriodsMapper;
import com.hori.grms.model.BackMoneyPlan;
import com.hori.grms.model.BackMoneyPlanPeriods;
import com.hori.grms.queryBean.BackMoneyPlanQueryBean;
import com.hori.grms.service.BackMoneyPlanPeriodsService;
import com.hori.grms.service.BackMoneyPlanService;
import com.hori.grms.util.UUIDGeneratorUtil;
import com.hori.grms.vo.BackMoneyPlanVo;
import com.hori.grms.vo.ContractDetailVo;
import com.hori.grms.vo.ContractVo;
@Service
public class BackMoneyPlanServiceImpl implements BackMoneyPlanService {

	@Autowired
	private BackMoneyPlanMapper backMoneyPlanMapper;
	
	@Autowired
	private BackMoneyPlanPeriodsMapper backMoneyPlanPeriodsMapper;
	
	@Autowired
	private BackMoneyPlanPeriodsService backMoneyPlanPeriodsService;
	@Override
	public List<BackMoneyPlanVo> getBackMoneyPlanListByCondition(BackMoneyPlanQueryBean queryBean) {
		// TODO Auto-generated method stub
		
		List<BackMoneyPlanVo> list = backMoneyPlanMapper.getBackMoneyPlanListByCondition(queryBean);
		if(list!=null&&list.size()>0){
	
			for (BackMoneyPlanVo backMoneyPlanVo : list) {
				//通过计划code查询子计划
				List<BackMoneyPlanPeriods> periodsList = backMoneyPlanPeriodsMapper.getPeriodsListByPlanCode(backMoneyPlanVo.getBackMoneyPlanCode());
				List<String> listStatus = new ArrayList<String>();
				//合同总金额
				Double money = backMoneyPlanVo.getMoney();
				//合同实收金额
				Double collectedMoney = 0.00;
				//扣款 
				Double reduceMoney = 0.00;
				//每个子计划
				if(periodsList!=null&&periodsList.size()>0){
					for (BackMoneyPlanPeriods backMoneyPlanPeriods : periodsList) {
						/**TODO**/
						//获取每个子计划状态
						listStatus.add(backMoneyPlanPeriods.getStatus().toString());
						//子计划实收金额
						if(backMoneyPlanPeriods.getRealBackMoney()!=null){
							collectedMoney = collectedMoney+backMoneyPlanPeriods.getRealBackMoney();
						}
						//扣款
						if(backMoneyPlanPeriods.getType()==3){
							reduceMoney = reduceMoney+backMoneyPlanPeriods.getRealBackMoney();
						}
					}
					//回款金额
					backMoneyPlanVo.setCollectedMoney(collectedMoney);
					backMoneyPlanVo.setUnCollectedMoney(money-collectedMoney);
					backMoneyPlanVo.setReduceMoney(reduceMoney);
					
					if(backMoneyPlanVo.getCheckStatus()==2){
						backMoneyPlanVo.setPlanStatus("已结案");
					}else if(backMoneyPlanVo.getCheckStatus()==0){
						backMoneyPlanVo.setPlanStatus("待审批");
					}else if(backMoneyPlanVo.getCheckStatus()==1){
						boolean flag = true;
						for (String status : listStatus) {
							if(status.equals("0")){//子计划有一个为未还款
								flag = false;
							}
						}
						if(flag){
							backMoneyPlanVo.setPlanStatus("已收款");
						}else{
							backMoneyPlanVo.setPlanStatus("待收款");
						}
					}else{
						backMoneyPlanVo.setPlanStatus("登记中");
					}
				}
			}
		}
		return list;
	}


	@Override
	public void insertSelective(BackMoneyPlan backMoneyPlan,List<BackMoneyPlanPeriods> list) {
		
		// TODO Auto-generated method stub
		backMoneyPlanMapper.insertSelective(backMoneyPlan);
		for (BackMoneyPlanPeriods planPeriods : list) {
			BackMoneyPlanPeriods backMoneyPlanPeriods = new BackMoneyPlanPeriods();
			backMoneyPlanPeriods.setBackMoneyPlanCode(backMoneyPlan.getBackMoneyPlanCode());
			backMoneyPlanPeriods.setId(UUIDGeneratorUtil.generateUUID());
			backMoneyPlanPeriods.setPlanBackMoney(planPeriods.getPlanBackMoney());
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			backMoneyPlanPeriods.setPlanBackTime(planPeriods.getPlanBackTime());
			backMoneyPlanPeriods.setRemark(planPeriods.getRemark());
			backMoneyPlanPeriods.setType(planPeriods.getType());
			backMoneyPlanPeriods.setStatus((short)0);
			backMoneyPlanPeriodsService.insertSelective(backMoneyPlanPeriods);
		}
	}


	@Override
	public List<ContractDetailVo> getContractList(String condition) {
		// TODO Auto-generated method stub
		return backMoneyPlanMapper.getContractList(condition);
	}


	@Override
	public ContractDetailVo getContractDetail(String contractCode) {
		// TODO Auto-generated method stub
		return backMoneyPlanMapper.getContractDetail(contractCode);
	}


	@Override
	public BackMoneyPlan getBackMoneyPlanByCode(String backMoneyPlanCode) {
		// TODO Auto-generated method stub
		return backMoneyPlanMapper.getBackMoneyPlanByCode(backMoneyPlanCode);
	}


	@Override
	public void updateByPrimaryKeySelective(BackMoneyPlan backMoneyPlan) {
		// TODO Auto-generated method stub
		backMoneyPlanMapper.updateByPrimaryKeySelective(backMoneyPlan);
	}


	@Override
	public List<BackMoneyPlanVo> getBackMoneyPlanListByProjectCode(String projectCode) {
		BackMoneyPlanQueryBean queryBean = new BackMoneyPlanQueryBean();
		queryBean.setSelectCondition("1");
		queryBean.setCondition(projectCode);
		queryBean.setBackMoneyStatus(null);
		queryBean.setStartTime(null);
		queryBean.setEndTime(null);
		queryBean.setUserString(null);
		return this.getBackMoneyPlanListByCondition(queryBean);
	}



	@Override
	public BackMoneyPlan getBackMoneyPlanByContractCode(String contractCode) {
		// TODO Auto-generated method stub
		return backMoneyPlanMapper.getBackMoneyPlanByContractCode(contractCode);
	}


	@Override
	public List<BackMoneyPlanVo> getBackMoneyPlanList() {
		List<BackMoneyPlanVo> list = backMoneyPlanMapper.getBackMoneyPlanList();
		if(list!=null&&list.size()>0){
			
			for (BackMoneyPlanVo backMoneyPlanVo : list) {
				//通过计划code查询子计划
				List<BackMoneyPlanPeriods> periodsList = backMoneyPlanPeriodsMapper.getPeriodsListByPlanCode(backMoneyPlanVo.getBackMoneyPlanCode());
				List<String> listStatus = new ArrayList<String>();
				//合同总金额
				Double money = backMoneyPlanVo.getMoney();
				//合同实收金额
				Double collectedMoney = 0.00;
				//扣款 
				Double reduceMoney = 0.00;
				//每个子计划
				if(periodsList!=null&&periodsList.size()>0){
					for (BackMoneyPlanPeriods backMoneyPlanPeriods : periodsList) {
						/**TODO**/
						//获取每个子计划状态
						listStatus.add(backMoneyPlanPeriods.getStatus().toString());
						//子计划实收金额
						if(backMoneyPlanPeriods.getRealBackMoney()!=null){
							collectedMoney = collectedMoney+backMoneyPlanPeriods.getRealBackMoney();
						}
						//扣款
						if(backMoneyPlanPeriods.getType()==3){
							reduceMoney = reduceMoney+backMoneyPlanPeriods.getRealBackMoney();
						}
					}
					//回款金额
					backMoneyPlanVo.setCollectedMoney(collectedMoney);
					backMoneyPlanVo.setUnCollectedMoney(money-collectedMoney);
					backMoneyPlanVo.setReduceMoney(reduceMoney);
					
					if(backMoneyPlanVo.getCheckStatus()==2){
						backMoneyPlanVo.setPlanStatus("已结案");
					}else if(backMoneyPlanVo.getCheckStatus()==0){
						backMoneyPlanVo.setPlanStatus("待审批");
					}else if(backMoneyPlanVo.getCheckStatus()==1){
						boolean flag = true;
						for (String status : listStatus) {
							if(status.equals("0")){//子计划有一个为未还款
								flag = false;
							}
						}
						if(flag){
							backMoneyPlanVo.setPlanStatus("已收款");
						}else{
							backMoneyPlanVo.setPlanStatus("待收款");
						}
					}else{
						backMoneyPlanVo.setPlanStatus("登记中");
					}
				}
			}
		}
		return list;
	}
}

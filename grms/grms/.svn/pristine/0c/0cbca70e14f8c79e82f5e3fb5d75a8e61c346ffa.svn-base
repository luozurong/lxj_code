package com.hori.grms.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.alibaba.fastjson.JSON;
import com.github.pagehelper.PageInfo;
import com.hori.grms.queryBean.PAExceptionQueryBean;
import com.hori.grms.queryBean.ProjectActionQueryBean;
import com.hori.grms.service.ProjectActionExceptionService;
import com.hori.grms.service.ProjectActionService;
import com.hori.grms.vo.CommunityProjectActionVo;
import com.hori.grms.vo.ProjectActionExceptionVo;

/**
 * 执行管理Controller
 * 
 * @author hehj
 * @datetime 2018年8月9日 上午11:44:46
 */
@Controller
@RequestMapping("/projectAction")
public class ProjectActionController extends BaseController {
	private final Logger logger = LoggerFactory.getLogger(ProjectActionController.class);

	@Autowired
	private ProjectActionService projectActionService;
	@Autowired
	private ProjectActionExceptionService projectActionExceptionService;

	/**
	 * 跳转至社区运营执行清单列表
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/communityActionList")
	public String goCommunityPAList(HttpServletRequest request, HttpServletResponse response) {
		String parameter = request.getParameter("projectActionQueryBean");
		
		request.setAttribute("projectActionQueryBean", parameter);
		return "/projectAction/communityActionList.jsp";
	}

	/**
	 * 社区运营执行清单列表数据
	 * @param request
	 * @param response
	 * @param queryBean
	 * @return
	 */
	@RequestMapping(value = "/getCommunityPAListData", produces = "text/html;charset=UTF-8;")
	@ResponseBody
	public String communityPAListData(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> resultMap = new HashMap<String, Object>();

		String parameter = request.getParameter("projectActionQueryBean");

		ProjectActionQueryBean queryBean = JSON.parseObject(parameter, ProjectActionQueryBean.class);
		if (queryBean != null) {
			logger.info("*********" + queryBean.toString());
		}

		PageInfo<CommunityProjectActionVo> pageInfo = projectActionService.listCommunityAction(queryBean);
		if (pageInfo == null) {
			resultMap.put("success", false);
		} else {
			resultMap.put("success", true);
			resultMap.put("rows", pageInfo.getList());
			resultMap.put("total", pageInfo.getTotal());
		}
		return JSON.toJSONString(resultMap);
	}
	
	/**
	 * 修改执行清单状态
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(value="/changeStatus",produces="text/html;charset=UTF-8;")
	@ResponseBody
	public String changeActionStatus(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String actionStatus = request.getParameter("actionStatus");
		String projectActionId = request.getParameter("projectActionId");
		int i = projectActionService.changeStatus(projectActionId, Integer.valueOf(actionStatus));
		
		if (i == 0) {
			resultMap.put("success", false);
		} else {
			resultMap.put("success", true);
		}
		return JSON.toJSONString(resultMap);
	}
	
	/**
	 * 异常上报记录列表
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping("/exceptionList")
	public String goExceptionList(HttpServletRequest request, HttpServletResponse response) {
		String queryBeanStr = request.getParameter("projectActionQueryBean");
		String projectActionCode = request.getParameter("actionCode");
		
		request.setAttribute("projectActionCode", projectActionCode);
		request.setAttribute("projectActionQueryBean", queryBeanStr);
		return "/projectAction/exceptionList.jsp";
	}
	
	@RequestMapping(value="/getExceptionListData",produces="text/html;charset=UTF-8;")
	@ResponseBody
	public String exceptionList(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String parameter = request.getParameter("paExceptionQueryBean");
		
		PAExceptionQueryBean queryBean = JSON.parseObject(parameter, PAExceptionQueryBean.class);
		if (queryBean != null) {
			logger.info("*********" + queryBean.toString());
		}
		
		PageInfo<ProjectActionExceptionVo> pageInfo = projectActionExceptionService.listException(queryBean);
		if (pageInfo == null) {
			resultMap.put("success", false);
		} else {
			resultMap.put("success", true);
			resultMap.put("rows", pageInfo.getList());
			resultMap.put("total", pageInfo.getTotal());
		}
		return JSON.toJSONString(resultMap);
	}
	
	/**
	 * 修改异常的执行部门确认状态
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(value="/changeConfirmStatus",produces="text/html;charset=UTF-8;")
	@ResponseBody
	public String changeConfirmStatus(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		String confirmStatus = request.getParameter("confirmStatus");
		String exceptionRecordId = request.getParameter("id");
		int i = projectActionExceptionService.changeConfirmStatus(exceptionRecordId, Short.valueOf(confirmStatus));
		
		if (i == 0) {
			resultMap.put("success", false);
		} else {
			resultMap.put("success", true);
		}
		return JSON.toJSONString(resultMap);
	}

	@RequestMapping("/projectActionList")
	public String getProjectActionList(HttpServletRequest request, HttpServletResponse response) {
		return "/projectAction/projectActionList.jsp";
	}

	/**
	 * 获取项目执行清单列表数据
	 * 
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(value = "/getlistData", produces = "text/html;charset=UTF-8;")
	@ResponseBody
	public String getProjectListData(HttpServletRequest request, HttpServletResponse response) {

		Map<String, Object> resultMap = new HashMap<String, Object>();

		try {
			String parameter = request.getParameter("projectQueryBean");

			ProjectActionQueryBean queryBean = JSON.parseObject(parameter, ProjectActionQueryBean.class);

			if (null == queryBean) {
				queryBean = new ProjectActionQueryBean();
			}

			PageInfo<Map<String, Object>> listProjectAction = projectActionService.listProjectAction(queryBean);

			List<Map<String, Object>> list = listProjectAction.getList();

			for (Map<String, Object> map : list) {
				Set<String> keySet = map.keySet();
				for (String string : keySet) {
					System.out.println(string);
				}
			}

			resultMap.put("success", true);
			resultMap.put("rows", listProjectAction.getList());
			resultMap.put("total", listProjectAction.getTotal());

		} catch (Exception e) {

			logger.info("错误原因：" + e.getMessage());
			resultMap.put("success", false);

		}

		return JSON.toJSONStringWithDateFormat(resultMap, "yyyy-MM-dd");
	}
}
